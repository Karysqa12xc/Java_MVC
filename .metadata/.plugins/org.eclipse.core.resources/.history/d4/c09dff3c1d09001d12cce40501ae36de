package main;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JPanel;


import Input.KeyBoardInput_5;
import Input.mouseInput_6;

import static utilz.Constansts.PlayerConstants.*;
import static utilz.Constansts.Directions.*;

public class gamePanel_4 extends JPanel {
	
	private mouseInput_6 mouseInputs;
	private float xDelta = 100, yDelta = 100;
	private BufferedImage img;
	private BufferedImage[][] animations;
	private int aniTick, aniIndex, aniSpeed = 15;
	private int playerAction = IDLE; 
	private int playDir = -1;
	private boolean moving = false;
	public gamePanel_4() {

		mouseInputs = new mouseInput_6(this);
		importImg();
		loadAnimation();
		setPanelSize();
		addKeyListener(new KeyBoardInput_5(this));
		addMouseListener(mouseInputs);
		addMouseMotionListener(mouseInputs);
	}

	private void loadAnimation() {
		animations = new BufferedImage[9][6];
	for(int j = 0; j < animations.length; j++)
		for (int i = 0; i < animations[j].length; i++) 
			animations[j][i] = img.getSubimage(i * 64, j * 40, 64, 40);		
	}

	private void importImg() {
		InputStream is = getClass().getResourceAsStream("/player_sprites.png");
		try {
			img = ImageIO.read(is);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private void setPanelSize() {
		Dimension size = new Dimension(1280, 800);
		setMinimumSize(size);
		setPreferredSize(size);
		setMaximumSize(size);
	}
	public void setDirection(int direction) {
		this.playDir = direction;
		moving = true;
	}

	private void updateAnimationTick() {
		aniTick++;
		if (aniTick >= aniSpeed) {
			aniTick = 0;
			aniIndex++;
			if (aniIndex >= GetSpriteAmount(playerAction))
				aniIndex = 0;

		}
	}

	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		updateAnimationTick();
		g.drawImage(animations[playerAction][aniIndex], (int) xDelta, (int) yDelta, 256, 160, null);
	}

}
